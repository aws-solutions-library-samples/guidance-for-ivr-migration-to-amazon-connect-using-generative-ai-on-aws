/*
 * MIT No Attribution
 *
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */


import * as antlr from "antlr4ng";
import { Token } from "antlr4ng";


export class TRSXLexer extends antlr.Lexer {
    public static readonly XMLDeclOpen = 1;
    public static readonly COMMENT = 2;
    public static readonly CDATA = 3;
    public static readonly DTD = 4;
    public static readonly OPEN = 5;
    public static readonly OPEN_SLASH = 6;
    public static readonly TEXT = 7;
    public static readonly WS = 8;
    public static readonly EntityRef = 9;
    public static readonly CharRef = 10;
    public static readonly SPECIAL_CLOSE = 11;
    public static readonly CLOSE = 12;
    public static readonly CLOSE_SLASH = 13;
    public static readonly EQUALS = 14;
    public static readonly S = 15;
    public static readonly ENCODING = 16;
    public static readonly STANDALONE = 17;
    public static readonly XMLNS = 18;
    public static readonly XMLNS_NUANCE = 19;
    public static readonly XML_LANG = 20;
    public static readonly NUANCE_VERSION = 21;
    public static readonly NUANCE_ENGINE_PACK_VERSION = 22;
    public static readonly PROJECT = 23;
    public static readonly METADATA = 24;
    public static readonly ENTRY = 25;
    public static readonly SOURCES = 26;
    public static readonly SOURCE = 27;
    public static readonly ONTOLOGY = 28;
    public static readonly INTENTS = 29;
    public static readonly INTENT = 30;
    public static readonly LINKS = 31;
    public static readonly LINK = 32;
    public static readonly CONCEPTS = 33;
    public static readonly CONCEPT = 34;
    public static readonly SETTINGS = 35;
    public static readonly SETTING = 36;
    public static readonly RELATIONS = 37;
    public static readonly RELATION = 38;
    public static readonly DICTIONARIES = 39;
    public static readonly DICTIONARY = 40;
    public static readonly SAMPLES = 41;
    public static readonly SAMPLE = 42;
    public static readonly ANNOTATION = 43;
    public static readonly SOURCEREF = 44;
    public static readonly VERSION = 45;
    public static readonly KEY = 46;
    public static readonly BASE = 47;
    public static readonly NAME_ATTR = 48;
    public static readonly FREETEXT = 49;
    public static readonly CONCEPTREF = 50;
    public static readonly INTENTREF = 51;
    public static readonly COUNT = 52;
    public static readonly LITERAL = 53;
    public static readonly VALUE = 54;
    public static readonly PROTECTED = 55;
    public static readonly DESCRIPTION = 56;
    public static readonly EXCLUDED = 57;
    public static readonly FULLY_VERIFIED = 58;
    public static readonly DATATYPE = 59;
    public static readonly DYNAMIC = 60;
    public static readonly RULE_GRAMMAR_FILE = 61;
    public static readonly TYPE = 62;
    public static readonly SOURCE_DISPLAY_NAME = 63;
    public static readonly SOURCE_URI = 64;
    public static readonly SOURCE_USE_FOR_OOV = 65;
    public static readonly PREFIXED_NAME = 66;
    public static readonly NAME = 67;
    public static readonly ATTVALUE_WS = 68;
    public static readonly STRING = 69;
    public static readonly INSIDE = 1;
    public static readonly ATTVALUE = 2;

    public static readonly channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    ];

    public static readonly literalNames = [
        null, "'<?xml'", null, null, null, "'<'", "'</'", null, null, null, 
        null, "'?>'", "'>'", "'/>'", "'='", null, "'encoding'", "'standalone'", 
        "'xmlns'", "'xmlns:nuance'", "'xml:lang'", "'nuance:version'", "'nuance:enginePackVersion'", 
        "'project'", "'metadata'", "'entry'", "'sources'", "'source'", "'ontology'", 
        "'intents'", "'intent'", "'links'", "'link'", "'concepts'", "'concept'", 
        "'settings'", "'setting'", "'relations'", "'relation'", "'dictionaries'", 
        "'dictionary'", "'samples'", "'sample'", "'annotation'", "'sourceref'", 
        "'version'", "'key'", "'base'", "'name'", "'freetext'", "'conceptref'", 
        "'intentref'", "'count'", "'literal'", "'value'", "'protected'", 
        "'description'", "'excluded'", "'fullyVerified'", "'dataType'", 
        "'dynamic'", "'ruleGrammarFileName'", "'type'", "'displayName'", 
        "'uri'", "'useForOOV'"
    ];

    public static readonly symbolicNames = [
        null, "XMLDeclOpen", "COMMENT", "CDATA", "DTD", "OPEN", "OPEN_SLASH", 
        "TEXT", "WS", "EntityRef", "CharRef", "SPECIAL_CLOSE", "CLOSE", 
        "CLOSE_SLASH", "EQUALS", "S", "ENCODING", "STANDALONE", "XMLNS", 
        "XMLNS_NUANCE", "XML_LANG", "NUANCE_VERSION", "NUANCE_ENGINE_PACK_VERSION", 
        "PROJECT", "METADATA", "ENTRY", "SOURCES", "SOURCE", "ONTOLOGY", 
        "INTENTS", "INTENT", "LINKS", "LINK", "CONCEPTS", "CONCEPT", "SETTINGS", 
        "SETTING", "RELATIONS", "RELATION", "DICTIONARIES", "DICTIONARY", 
        "SAMPLES", "SAMPLE", "ANNOTATION", "SOURCEREF", "VERSION", "KEY", 
        "BASE", "NAME_ATTR", "FREETEXT", "CONCEPTREF", "INTENTREF", "COUNT", 
        "LITERAL", "VALUE", "PROTECTED", "DESCRIPTION", "EXCLUDED", "FULLY_VERIFIED", 
        "DATATYPE", "DYNAMIC", "RULE_GRAMMAR_FILE", "TYPE", "SOURCE_DISPLAY_NAME", 
        "SOURCE_URI", "SOURCE_USE_FOR_OOV", "PREFIXED_NAME", "NAME", "ATTVALUE_WS", 
        "STRING"
    ];

    public static readonly modeNames = [
        "DEFAULT_MODE", "INSIDE", "ATTVALUE",
    ];

    public static readonly ruleNames = [
        "XMLDeclOpen", "COMMENT", "CDATA", "DTD", "OPEN", "OPEN_SLASH", 
        "TEXT", "WS", "EntityRef", "CharRef", "SPECIAL_CLOSE", "CLOSE", 
        "CLOSE_SLASH", "EQUALS", "S", "ENCODING", "STANDALONE", "XMLNS", 
        "XMLNS_NUANCE", "XML_LANG", "NUANCE_VERSION", "NUANCE_ENGINE_PACK_VERSION", 
        "PROJECT", "METADATA", "ENTRY", "SOURCES", "SOURCE", "ONTOLOGY", 
        "INTENTS", "INTENT", "LINKS", "LINK", "CONCEPTS", "CONCEPT", "SETTINGS", 
        "SETTING", "RELATIONS", "RELATION", "DICTIONARIES", "DICTIONARY", 
        "SAMPLES", "SAMPLE", "ANNOTATION", "SOURCEREF", "VERSION", "KEY", 
        "BASE", "NAME_ATTR", "FREETEXT", "CONCEPTREF", "INTENTREF", "COUNT", 
        "LITERAL", "VALUE", "PROTECTED", "DESCRIPTION", "EXCLUDED", "FULLY_VERIFIED", 
        "DATATYPE", "DYNAMIC", "RULE_GRAMMAR_FILE", "TYPE", "SOURCE_DISPLAY_NAME", 
        "SOURCE_URI", "SOURCE_USE_FOR_OOV", "PREFIXED_NAME", "NAME", "ATTVALUE_WS", 
        "STRING",
    ];


    public constructor(input: antlr.CharStream) {
        super(input);
        this.interpreter = new antlr.LexerATNSimulator(this, TRSXLexer._ATN, TRSXLexer.decisionsToDFA, new antlr.PredictionContextCache());
    }

    public get grammarFileName(): string { return "TRSXLexer.g4"; }

    public get literalNames(): (string | null)[] { return TRSXLexer.literalNames; }
    public get symbolicNames(): (string | null)[] { return TRSXLexer.symbolicNames; }
    public get ruleNames(): string[] { return TRSXLexer.ruleNames; }

    public get serializedATN(): number[] { return TRSXLexer._serializedATN; }

    public get channelNames(): string[] { return TRSXLexer.channelNames; }

    public get modeNames(): string[] { return TRSXLexer.modeNames; }

    public static readonly _serializedATN: number[] = [
        4,0,69,785,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,
        4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,
        12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,
        18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,
        25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,
        31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
        38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,
        44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,
        51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,
        57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,
        64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,5,1,156,8,1,10,1,12,1,159,
        9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,5,2,178,8,2,10,2,12,2,181,9,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
        3,1,3,1,3,1,3,5,3,193,8,3,10,3,12,3,196,9,3,1,3,1,3,1,3,1,3,1,4,
        1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,4,6,212,8,6,11,6,12,6,213,1,
        6,4,6,217,8,6,11,6,12,6,218,3,6,221,8,6,1,7,4,7,224,8,7,11,7,12,
        7,225,1,7,1,7,1,8,1,8,4,8,232,8,8,11,8,12,8,233,1,8,1,8,1,9,1,9,
        1,9,1,9,4,9,242,8,9,11,9,12,9,243,1,9,1,9,1,9,1,9,1,9,1,9,4,9,252,
        8,9,11,9,12,9,253,1,9,3,9,257,8,9,1,10,1,10,1,10,1,10,1,10,1,11,
        1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,
        4,14,278,8,14,11,14,12,14,279,1,14,1,14,1,15,1,15,1,15,1,15,1,15,
        1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
        1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,
        1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,
        1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
        1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,
        1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,
        1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,
        1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
        1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
        1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,
        1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,
        1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,
        1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,
        1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,
        1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
        1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,
        1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,
        1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,
        1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,
        1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,
        1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,
        1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,
        1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,
        1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,
        1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,62,
        1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,
        1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,65,
        4,65,744,8,65,11,65,12,65,745,1,65,1,65,4,65,750,8,65,11,65,12,65,
        751,1,66,4,66,755,8,66,11,66,12,66,756,1,67,4,67,760,8,67,11,67,
        12,67,761,1,67,1,67,1,68,1,68,5,68,768,8,68,10,68,12,68,771,9,68,
        1,68,1,68,1,68,5,68,776,8,68,10,68,12,68,779,9,68,1,68,3,68,782,
        8,68,1,68,1,68,3,157,179,194,0,69,3,1,5,2,7,3,9,4,11,5,13,6,15,7,
        17,8,19,9,21,10,23,11,25,12,27,13,29,14,31,15,33,16,35,17,37,18,
        39,19,41,20,43,21,45,22,47,23,49,24,51,25,53,26,55,27,57,28,59,29,
        61,30,63,31,65,32,67,33,69,34,71,35,73,36,75,37,77,38,79,39,81,40,
        83,41,85,42,87,43,89,44,91,45,93,46,95,47,97,48,99,49,101,50,103,
        51,105,52,107,53,109,54,111,55,113,56,115,57,117,58,119,59,121,60,
        123,61,125,62,127,63,129,64,131,65,133,66,135,67,137,68,139,69,3,
        0,1,2,8,5,0,9,10,13,13,32,32,38,38,60,60,2,0,9,9,32,32,3,0,9,10,
        13,13,32,32,2,0,65,90,97,122,1,0,48,57,3,0,48,57,65,70,97,102,3,
        0,34,34,38,38,60,60,2,0,38,39,60,60,801,0,3,1,0,0,0,0,5,1,0,0,0,
        0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,
        17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,1,23,1,0,0,0,1,25,1,0,0,0,1,
        27,1,0,0,0,1,29,1,0,0,0,1,31,1,0,0,0,1,33,1,0,0,0,1,35,1,0,0,0,1,
        37,1,0,0,0,1,39,1,0,0,0,1,41,1,0,0,0,1,43,1,0,0,0,1,45,1,0,0,0,1,
        47,1,0,0,0,1,49,1,0,0,0,1,51,1,0,0,0,1,53,1,0,0,0,1,55,1,0,0,0,1,
        57,1,0,0,0,1,59,1,0,0,0,1,61,1,0,0,0,1,63,1,0,0,0,1,65,1,0,0,0,1,
        67,1,0,0,0,1,69,1,0,0,0,1,71,1,0,0,0,1,73,1,0,0,0,1,75,1,0,0,0,1,
        77,1,0,0,0,1,79,1,0,0,0,1,81,1,0,0,0,1,83,1,0,0,0,1,85,1,0,0,0,1,
        87,1,0,0,0,1,89,1,0,0,0,1,91,1,0,0,0,1,93,1,0,0,0,1,95,1,0,0,0,1,
        97,1,0,0,0,1,99,1,0,0,0,1,101,1,0,0,0,1,103,1,0,0,0,1,105,1,0,0,
        0,1,107,1,0,0,0,1,109,1,0,0,0,1,111,1,0,0,0,1,113,1,0,0,0,1,115,
        1,0,0,0,1,117,1,0,0,0,1,119,1,0,0,0,1,121,1,0,0,0,1,123,1,0,0,0,
        1,125,1,0,0,0,1,127,1,0,0,0,1,129,1,0,0,0,1,131,1,0,0,0,1,133,1,
        0,0,0,1,135,1,0,0,0,2,137,1,0,0,0,2,139,1,0,0,0,3,141,1,0,0,0,5,
        149,1,0,0,0,7,166,1,0,0,0,9,188,1,0,0,0,11,201,1,0,0,0,13,205,1,
        0,0,0,15,220,1,0,0,0,17,223,1,0,0,0,19,229,1,0,0,0,21,256,1,0,0,
        0,23,258,1,0,0,0,25,263,1,0,0,0,27,267,1,0,0,0,29,272,1,0,0,0,31,
        277,1,0,0,0,33,283,1,0,0,0,35,292,1,0,0,0,37,303,1,0,0,0,39,309,
        1,0,0,0,41,322,1,0,0,0,43,331,1,0,0,0,45,346,1,0,0,0,47,371,1,0,
        0,0,49,379,1,0,0,0,51,388,1,0,0,0,53,394,1,0,0,0,55,402,1,0,0,0,
        57,409,1,0,0,0,59,418,1,0,0,0,61,426,1,0,0,0,63,433,1,0,0,0,65,439,
        1,0,0,0,67,444,1,0,0,0,69,453,1,0,0,0,71,461,1,0,0,0,73,470,1,0,
        0,0,75,478,1,0,0,0,77,488,1,0,0,0,79,497,1,0,0,0,81,510,1,0,0,0,
        83,521,1,0,0,0,85,529,1,0,0,0,87,536,1,0,0,0,89,547,1,0,0,0,91,557,
        1,0,0,0,93,565,1,0,0,0,95,569,1,0,0,0,97,574,1,0,0,0,99,579,1,0,
        0,0,101,588,1,0,0,0,103,599,1,0,0,0,105,609,1,0,0,0,107,615,1,0,
        0,0,109,623,1,0,0,0,111,629,1,0,0,0,113,639,1,0,0,0,115,651,1,0,
        0,0,117,660,1,0,0,0,119,674,1,0,0,0,121,683,1,0,0,0,123,691,1,0,
        0,0,125,711,1,0,0,0,127,716,1,0,0,0,129,728,1,0,0,0,131,732,1,0,
        0,0,133,743,1,0,0,0,135,754,1,0,0,0,137,759,1,0,0,0,139,781,1,0,
        0,0,141,142,5,60,0,0,142,143,5,63,0,0,143,144,5,120,0,0,144,145,
        5,109,0,0,145,146,5,108,0,0,146,147,1,0,0,0,147,148,6,0,0,0,148,
        4,1,0,0,0,149,150,5,60,0,0,150,151,5,33,0,0,151,152,5,45,0,0,152,
        153,5,45,0,0,153,157,1,0,0,0,154,156,9,0,0,0,155,154,1,0,0,0,156,
        159,1,0,0,0,157,158,1,0,0,0,157,155,1,0,0,0,158,160,1,0,0,0,159,
        157,1,0,0,0,160,161,5,45,0,0,161,162,5,45,0,0,162,163,5,62,0,0,163,
        164,1,0,0,0,164,165,6,1,1,0,165,6,1,0,0,0,166,167,5,60,0,0,167,168,
        5,33,0,0,168,169,5,91,0,0,169,170,5,67,0,0,170,171,5,68,0,0,171,
        172,5,65,0,0,172,173,5,84,0,0,173,174,5,65,0,0,174,175,5,91,0,0,
        175,179,1,0,0,0,176,178,9,0,0,0,177,176,1,0,0,0,178,181,1,0,0,0,
        179,180,1,0,0,0,179,177,1,0,0,0,180,182,1,0,0,0,181,179,1,0,0,0,
        182,183,5,93,0,0,183,184,5,93,0,0,184,185,5,62,0,0,185,186,1,0,0,
        0,186,187,6,2,1,0,187,8,1,0,0,0,188,189,5,60,0,0,189,190,5,33,0,
        0,190,194,1,0,0,0,191,193,9,0,0,0,192,191,1,0,0,0,193,196,1,0,0,
        0,194,195,1,0,0,0,194,192,1,0,0,0,195,197,1,0,0,0,196,194,1,0,0,
        0,197,198,5,62,0,0,198,199,1,0,0,0,199,200,6,3,1,0,200,10,1,0,0,
        0,201,202,5,60,0,0,202,203,1,0,0,0,203,204,6,4,0,0,204,12,1,0,0,
        0,205,206,5,60,0,0,206,207,5,47,0,0,207,208,1,0,0,0,208,209,6,5,
        0,0,209,14,1,0,0,0,210,212,8,0,0,0,211,210,1,0,0,0,212,213,1,0,0,
        0,213,211,1,0,0,0,213,214,1,0,0,0,214,221,1,0,0,0,215,217,7,1,0,
        0,216,215,1,0,0,0,217,218,1,0,0,0,218,216,1,0,0,0,218,219,1,0,0,
        0,219,221,1,0,0,0,220,211,1,0,0,0,220,216,1,0,0,0,221,16,1,0,0,0,
        222,224,7,2,0,0,223,222,1,0,0,0,224,225,1,0,0,0,225,223,1,0,0,0,
        225,226,1,0,0,0,226,227,1,0,0,0,227,228,6,7,1,0,228,18,1,0,0,0,229,
        231,5,38,0,0,230,232,7,3,0,0,231,230,1,0,0,0,232,233,1,0,0,0,233,
        231,1,0,0,0,233,234,1,0,0,0,234,235,1,0,0,0,235,236,5,59,0,0,236,
        20,1,0,0,0,237,238,5,38,0,0,238,239,5,35,0,0,239,241,1,0,0,0,240,
        242,7,4,0,0,241,240,1,0,0,0,242,243,1,0,0,0,243,241,1,0,0,0,243,
        244,1,0,0,0,244,245,1,0,0,0,245,257,5,59,0,0,246,247,5,38,0,0,247,
        248,5,35,0,0,248,249,5,120,0,0,249,251,1,0,0,0,250,252,7,5,0,0,251,
        250,1,0,0,0,252,253,1,0,0,0,253,251,1,0,0,0,253,254,1,0,0,0,254,
        255,1,0,0,0,255,257,5,59,0,0,256,237,1,0,0,0,256,246,1,0,0,0,257,
        22,1,0,0,0,258,259,5,63,0,0,259,260,5,62,0,0,260,261,1,0,0,0,261,
        262,6,10,2,0,262,24,1,0,0,0,263,264,5,62,0,0,264,265,1,0,0,0,265,
        266,6,11,2,0,266,26,1,0,0,0,267,268,5,47,0,0,268,269,5,62,0,0,269,
        270,1,0,0,0,270,271,6,12,2,0,271,28,1,0,0,0,272,273,5,61,0,0,273,
        274,1,0,0,0,274,275,6,13,3,0,275,30,1,0,0,0,276,278,7,2,0,0,277,
        276,1,0,0,0,278,279,1,0,0,0,279,277,1,0,0,0,279,280,1,0,0,0,280,
        281,1,0,0,0,281,282,6,14,1,0,282,32,1,0,0,0,283,284,5,101,0,0,284,
        285,5,110,0,0,285,286,5,99,0,0,286,287,5,111,0,0,287,288,5,100,0,
        0,288,289,5,105,0,0,289,290,5,110,0,0,290,291,5,103,0,0,291,34,1,
        0,0,0,292,293,5,115,0,0,293,294,5,116,0,0,294,295,5,97,0,0,295,296,
        5,110,0,0,296,297,5,100,0,0,297,298,5,97,0,0,298,299,5,108,0,0,299,
        300,5,111,0,0,300,301,5,110,0,0,301,302,5,101,0,0,302,36,1,0,0,0,
        303,304,5,120,0,0,304,305,5,109,0,0,305,306,5,108,0,0,306,307,5,
        110,0,0,307,308,5,115,0,0,308,38,1,0,0,0,309,310,5,120,0,0,310,311,
        5,109,0,0,311,312,5,108,0,0,312,313,5,110,0,0,313,314,5,115,0,0,
        314,315,5,58,0,0,315,316,5,110,0,0,316,317,5,117,0,0,317,318,5,97,
        0,0,318,319,5,110,0,0,319,320,5,99,0,0,320,321,5,101,0,0,321,40,
        1,0,0,0,322,323,5,120,0,0,323,324,5,109,0,0,324,325,5,108,0,0,325,
        326,5,58,0,0,326,327,5,108,0,0,327,328,5,97,0,0,328,329,5,110,0,
        0,329,330,5,103,0,0,330,42,1,0,0,0,331,332,5,110,0,0,332,333,5,117,
        0,0,333,334,5,97,0,0,334,335,5,110,0,0,335,336,5,99,0,0,336,337,
        5,101,0,0,337,338,5,58,0,0,338,339,5,118,0,0,339,340,5,101,0,0,340,
        341,5,114,0,0,341,342,5,115,0,0,342,343,5,105,0,0,343,344,5,111,
        0,0,344,345,5,110,0,0,345,44,1,0,0,0,346,347,5,110,0,0,347,348,5,
        117,0,0,348,349,5,97,0,0,349,350,5,110,0,0,350,351,5,99,0,0,351,
        352,5,101,0,0,352,353,5,58,0,0,353,354,5,101,0,0,354,355,5,110,0,
        0,355,356,5,103,0,0,356,357,5,105,0,0,357,358,5,110,0,0,358,359,
        5,101,0,0,359,360,5,80,0,0,360,361,5,97,0,0,361,362,5,99,0,0,362,
        363,5,107,0,0,363,364,5,86,0,0,364,365,5,101,0,0,365,366,5,114,0,
        0,366,367,5,115,0,0,367,368,5,105,0,0,368,369,5,111,0,0,369,370,
        5,110,0,0,370,46,1,0,0,0,371,372,5,112,0,0,372,373,5,114,0,0,373,
        374,5,111,0,0,374,375,5,106,0,0,375,376,5,101,0,0,376,377,5,99,0,
        0,377,378,5,116,0,0,378,48,1,0,0,0,379,380,5,109,0,0,380,381,5,101,
        0,0,381,382,5,116,0,0,382,383,5,97,0,0,383,384,5,100,0,0,384,385,
        5,97,0,0,385,386,5,116,0,0,386,387,5,97,0,0,387,50,1,0,0,0,388,389,
        5,101,0,0,389,390,5,110,0,0,390,391,5,116,0,0,391,392,5,114,0,0,
        392,393,5,121,0,0,393,52,1,0,0,0,394,395,5,115,0,0,395,396,5,111,
        0,0,396,397,5,117,0,0,397,398,5,114,0,0,398,399,5,99,0,0,399,400,
        5,101,0,0,400,401,5,115,0,0,401,54,1,0,0,0,402,403,5,115,0,0,403,
        404,5,111,0,0,404,405,5,117,0,0,405,406,5,114,0,0,406,407,5,99,0,
        0,407,408,5,101,0,0,408,56,1,0,0,0,409,410,5,111,0,0,410,411,5,110,
        0,0,411,412,5,116,0,0,412,413,5,111,0,0,413,414,5,108,0,0,414,415,
        5,111,0,0,415,416,5,103,0,0,416,417,5,121,0,0,417,58,1,0,0,0,418,
        419,5,105,0,0,419,420,5,110,0,0,420,421,5,116,0,0,421,422,5,101,
        0,0,422,423,5,110,0,0,423,424,5,116,0,0,424,425,5,115,0,0,425,60,
        1,0,0,0,426,427,5,105,0,0,427,428,5,110,0,0,428,429,5,116,0,0,429,
        430,5,101,0,0,430,431,5,110,0,0,431,432,5,116,0,0,432,62,1,0,0,0,
        433,434,5,108,0,0,434,435,5,105,0,0,435,436,5,110,0,0,436,437,5,
        107,0,0,437,438,5,115,0,0,438,64,1,0,0,0,439,440,5,108,0,0,440,441,
        5,105,0,0,441,442,5,110,0,0,442,443,5,107,0,0,443,66,1,0,0,0,444,
        445,5,99,0,0,445,446,5,111,0,0,446,447,5,110,0,0,447,448,5,99,0,
        0,448,449,5,101,0,0,449,450,5,112,0,0,450,451,5,116,0,0,451,452,
        5,115,0,0,452,68,1,0,0,0,453,454,5,99,0,0,454,455,5,111,0,0,455,
        456,5,110,0,0,456,457,5,99,0,0,457,458,5,101,0,0,458,459,5,112,0,
        0,459,460,5,116,0,0,460,70,1,0,0,0,461,462,5,115,0,0,462,463,5,101,
        0,0,463,464,5,116,0,0,464,465,5,116,0,0,465,466,5,105,0,0,466,467,
        5,110,0,0,467,468,5,103,0,0,468,469,5,115,0,0,469,72,1,0,0,0,470,
        471,5,115,0,0,471,472,5,101,0,0,472,473,5,116,0,0,473,474,5,116,
        0,0,474,475,5,105,0,0,475,476,5,110,0,0,476,477,5,103,0,0,477,74,
        1,0,0,0,478,479,5,114,0,0,479,480,5,101,0,0,480,481,5,108,0,0,481,
        482,5,97,0,0,482,483,5,116,0,0,483,484,5,105,0,0,484,485,5,111,0,
        0,485,486,5,110,0,0,486,487,5,115,0,0,487,76,1,0,0,0,488,489,5,114,
        0,0,489,490,5,101,0,0,490,491,5,108,0,0,491,492,5,97,0,0,492,493,
        5,116,0,0,493,494,5,105,0,0,494,495,5,111,0,0,495,496,5,110,0,0,
        496,78,1,0,0,0,497,498,5,100,0,0,498,499,5,105,0,0,499,500,5,99,
        0,0,500,501,5,116,0,0,501,502,5,105,0,0,502,503,5,111,0,0,503,504,
        5,110,0,0,504,505,5,97,0,0,505,506,5,114,0,0,506,507,5,105,0,0,507,
        508,5,101,0,0,508,509,5,115,0,0,509,80,1,0,0,0,510,511,5,100,0,0,
        511,512,5,105,0,0,512,513,5,99,0,0,513,514,5,116,0,0,514,515,5,105,
        0,0,515,516,5,111,0,0,516,517,5,110,0,0,517,518,5,97,0,0,518,519,
        5,114,0,0,519,520,5,121,0,0,520,82,1,0,0,0,521,522,5,115,0,0,522,
        523,5,97,0,0,523,524,5,109,0,0,524,525,5,112,0,0,525,526,5,108,0,
        0,526,527,5,101,0,0,527,528,5,115,0,0,528,84,1,0,0,0,529,530,5,115,
        0,0,530,531,5,97,0,0,531,532,5,109,0,0,532,533,5,112,0,0,533,534,
        5,108,0,0,534,535,5,101,0,0,535,86,1,0,0,0,536,537,5,97,0,0,537,
        538,5,110,0,0,538,539,5,110,0,0,539,540,5,111,0,0,540,541,5,116,
        0,0,541,542,5,97,0,0,542,543,5,116,0,0,543,544,5,105,0,0,544,545,
        5,111,0,0,545,546,5,110,0,0,546,88,1,0,0,0,547,548,5,115,0,0,548,
        549,5,111,0,0,549,550,5,117,0,0,550,551,5,114,0,0,551,552,5,99,0,
        0,552,553,5,101,0,0,553,554,5,114,0,0,554,555,5,101,0,0,555,556,
        5,102,0,0,556,90,1,0,0,0,557,558,5,118,0,0,558,559,5,101,0,0,559,
        560,5,114,0,0,560,561,5,115,0,0,561,562,5,105,0,0,562,563,5,111,
        0,0,563,564,5,110,0,0,564,92,1,0,0,0,565,566,5,107,0,0,566,567,5,
        101,0,0,567,568,5,121,0,0,568,94,1,0,0,0,569,570,5,98,0,0,570,571,
        5,97,0,0,571,572,5,115,0,0,572,573,5,101,0,0,573,96,1,0,0,0,574,
        575,5,110,0,0,575,576,5,97,0,0,576,577,5,109,0,0,577,578,5,101,0,
        0,578,98,1,0,0,0,579,580,5,102,0,0,580,581,5,114,0,0,581,582,5,101,
        0,0,582,583,5,101,0,0,583,584,5,116,0,0,584,585,5,101,0,0,585,586,
        5,120,0,0,586,587,5,116,0,0,587,100,1,0,0,0,588,589,5,99,0,0,589,
        590,5,111,0,0,590,591,5,110,0,0,591,592,5,99,0,0,592,593,5,101,0,
        0,593,594,5,112,0,0,594,595,5,116,0,0,595,596,5,114,0,0,596,597,
        5,101,0,0,597,598,5,102,0,0,598,102,1,0,0,0,599,600,5,105,0,0,600,
        601,5,110,0,0,601,602,5,116,0,0,602,603,5,101,0,0,603,604,5,110,
        0,0,604,605,5,116,0,0,605,606,5,114,0,0,606,607,5,101,0,0,607,608,
        5,102,0,0,608,104,1,0,0,0,609,610,5,99,0,0,610,611,5,111,0,0,611,
        612,5,117,0,0,612,613,5,110,0,0,613,614,5,116,0,0,614,106,1,0,0,
        0,615,616,5,108,0,0,616,617,5,105,0,0,617,618,5,116,0,0,618,619,
        5,101,0,0,619,620,5,114,0,0,620,621,5,97,0,0,621,622,5,108,0,0,622,
        108,1,0,0,0,623,624,5,118,0,0,624,625,5,97,0,0,625,626,5,108,0,0,
        626,627,5,117,0,0,627,628,5,101,0,0,628,110,1,0,0,0,629,630,5,112,
        0,0,630,631,5,114,0,0,631,632,5,111,0,0,632,633,5,116,0,0,633,634,
        5,101,0,0,634,635,5,99,0,0,635,636,5,116,0,0,636,637,5,101,0,0,637,
        638,5,100,0,0,638,112,1,0,0,0,639,640,5,100,0,0,640,641,5,101,0,
        0,641,642,5,115,0,0,642,643,5,99,0,0,643,644,5,114,0,0,644,645,5,
        105,0,0,645,646,5,112,0,0,646,647,5,116,0,0,647,648,5,105,0,0,648,
        649,5,111,0,0,649,650,5,110,0,0,650,114,1,0,0,0,651,652,5,101,0,
        0,652,653,5,120,0,0,653,654,5,99,0,0,654,655,5,108,0,0,655,656,5,
        117,0,0,656,657,5,100,0,0,657,658,5,101,0,0,658,659,5,100,0,0,659,
        116,1,0,0,0,660,661,5,102,0,0,661,662,5,117,0,0,662,663,5,108,0,
        0,663,664,5,108,0,0,664,665,5,121,0,0,665,666,5,86,0,0,666,667,5,
        101,0,0,667,668,5,114,0,0,668,669,5,105,0,0,669,670,5,102,0,0,670,
        671,5,105,0,0,671,672,5,101,0,0,672,673,5,100,0,0,673,118,1,0,0,
        0,674,675,5,100,0,0,675,676,5,97,0,0,676,677,5,116,0,0,677,678,5,
        97,0,0,678,679,5,84,0,0,679,680,5,121,0,0,680,681,5,112,0,0,681,
        682,5,101,0,0,682,120,1,0,0,0,683,684,5,100,0,0,684,685,5,121,0,
        0,685,686,5,110,0,0,686,687,5,97,0,0,687,688,5,109,0,0,688,689,5,
        105,0,0,689,690,5,99,0,0,690,122,1,0,0,0,691,692,5,114,0,0,692,693,
        5,117,0,0,693,694,5,108,0,0,694,695,5,101,0,0,695,696,5,71,0,0,696,
        697,5,114,0,0,697,698,5,97,0,0,698,699,5,109,0,0,699,700,5,109,0,
        0,700,701,5,97,0,0,701,702,5,114,0,0,702,703,5,70,0,0,703,704,5,
        105,0,0,704,705,5,108,0,0,705,706,5,101,0,0,706,707,5,78,0,0,707,
        708,5,97,0,0,708,709,5,109,0,0,709,710,5,101,0,0,710,124,1,0,0,0,
        711,712,5,116,0,0,712,713,5,121,0,0,713,714,5,112,0,0,714,715,5,
        101,0,0,715,126,1,0,0,0,716,717,5,100,0,0,717,718,5,105,0,0,718,
        719,5,115,0,0,719,720,5,112,0,0,720,721,5,108,0,0,721,722,5,97,0,
        0,722,723,5,121,0,0,723,724,5,78,0,0,724,725,5,97,0,0,725,726,5,
        109,0,0,726,727,5,101,0,0,727,128,1,0,0,0,728,729,5,117,0,0,729,
        730,5,114,0,0,730,731,5,105,0,0,731,130,1,0,0,0,732,733,5,117,0,
        0,733,734,5,115,0,0,734,735,5,101,0,0,735,736,5,70,0,0,736,737,5,
        111,0,0,737,738,5,114,0,0,738,739,5,79,0,0,739,740,5,79,0,0,740,
        741,5,86,0,0,741,132,1,0,0,0,742,744,7,3,0,0,743,742,1,0,0,0,744,
        745,1,0,0,0,745,743,1,0,0,0,745,746,1,0,0,0,746,747,1,0,0,0,747,
        749,5,58,0,0,748,750,7,3,0,0,749,748,1,0,0,0,750,751,1,0,0,0,751,
        749,1,0,0,0,751,752,1,0,0,0,752,134,1,0,0,0,753,755,7,3,0,0,754,
        753,1,0,0,0,755,756,1,0,0,0,756,754,1,0,0,0,756,757,1,0,0,0,757,
        136,1,0,0,0,758,760,7,2,0,0,759,758,1,0,0,0,760,761,1,0,0,0,761,
        759,1,0,0,0,761,762,1,0,0,0,762,763,1,0,0,0,763,764,6,67,1,0,764,
        138,1,0,0,0,765,769,5,34,0,0,766,768,8,6,0,0,767,766,1,0,0,0,768,
        771,1,0,0,0,769,767,1,0,0,0,769,770,1,0,0,0,770,772,1,0,0,0,771,
        769,1,0,0,0,772,782,5,34,0,0,773,777,5,39,0,0,774,776,8,7,0,0,775,
        774,1,0,0,0,776,779,1,0,0,0,777,775,1,0,0,0,777,778,1,0,0,0,778,
        780,1,0,0,0,779,777,1,0,0,0,780,782,5,39,0,0,781,765,1,0,0,0,781,
        773,1,0,0,0,782,783,1,0,0,0,783,784,6,68,2,0,784,140,1,0,0,0,22,
        0,1,2,157,179,194,213,218,220,225,233,243,253,256,279,745,751,756,
        761,769,777,781,4,5,1,0,6,0,0,4,0,0,5,2,0
    ];

    private static __ATN: antlr.ATN;
    public static get _ATN(): antlr.ATN {
        if (!TRSXLexer.__ATN) {
            TRSXLexer.__ATN = new antlr.ATNDeserializer().deserialize(TRSXLexer._serializedATN);
        }

        return TRSXLexer.__ATN;
    }


    private static readonly vocabulary = new antlr.Vocabulary(TRSXLexer.literalNames, TRSXLexer.symbolicNames, []);

    public override get vocabulary(): antlr.Vocabulary {
        return TRSXLexer.vocabulary;
    }

    private static readonly decisionsToDFA = TRSXLexer._ATN.decisionToState.map( (ds: antlr.DecisionState, index: number) => new antlr.DFA(ds, index) );
}